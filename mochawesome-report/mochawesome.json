{
  "stats": {
    "suites": 4,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-15T20:48:45.913Z",
    "end": "2024-08-15T20:48:45.930Z",
    "duration": 17,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e10ebfb0-6569-41bf-8895-43e59a1ff004",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5658d8b4-01dc-4c80-a61b-0d518b7d67a0",
          "title": "getEvenNumbersFromArray",
          "fullFile": "J:\\EPAM_PROJECTS\\TESTING\\proj_unit-testing-task-01\\test\\numbers-validator\\getEvenNumbersFromArray.spec.mjs",
          "file": "\\test\\numbers-validator\\getEvenNumbersFromArray.spec.mjs",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"getEvenNumbersFromArray\"",
              "fullTitle": "getEvenNumbersFromArray \"before each\" hook in \"getEvenNumbersFromArray\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "3b6bde6d-0ac3-44f1-bd62-4327377bc3aa",
              "parentUUID": "5658d8b4-01dc-4c80-a61b-0d518b7d67a0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"getEvenNumbersFromArray\"",
              "fullTitle": "getEvenNumbersFromArray \"after each\" hook in \"getEvenNumbersFromArray\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "0502286c-6daf-4261-a4b9-869e05d21ef9",
              "parentUUID": "5658d8b4-01dc-4c80-a61b-0d518b7d67a0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return an ARRAY of EVEN numbers",
              "fullTitle": "getEvenNumbersFromArray should return an ARRAY of EVEN numbers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrayOfNumbers = [5, 2, 6, 11, 22];\nconst evenNumbersArray = validator.getEvenNumbersFromArray(arrayOfNumbers);\nexpect(evenNumbersArray).to.be.eql([2, 6, 22]);",
              "err": {},
              "uuid": "3fd687fc-04cb-4177-9427-eb0e24444a45",
              "parentUUID": "5658d8b4-01dc-4c80-a61b-0d518b7d67a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an ERROR if array is NOT full of numbers",
              "fullTitle": "getEvenNumbersFromArray should throw an ERROR if array is NOT full of numbers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrayOfValues = [5, \"2\", 11, 22];\nexpect(() => {\n  validator.getEvenNumbersFromArray(arrayOfValues);\n}).to.throw('[5,2,11,22] is not an array of \"Numbers\"');",
              "err": {},
              "uuid": "564f2000-2e0c-43dc-8875-33b707d561c2",
              "parentUUID": "5658d8b4-01dc-4c80-a61b-0d518b7d67a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3fd687fc-04cb-4177-9427-eb0e24444a45",
            "564f2000-2e0c-43dc-8875-33b707d561c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f87d9790-e8ae-4e86-a1f0-50d8157277bb",
          "title": "isAllNumbers",
          "fullFile": "J:\\EPAM_PROJECTS\\TESTING\\proj_unit-testing-task-01\\test\\numbers-validator\\isAllNumbers.spec.mjs",
          "file": "\\test\\numbers-validator\\isAllNumbers.spec.mjs",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isAllNumbers\"",
              "fullTitle": "isAllNumbers \"before each\" hook in \"isAllNumbers\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "5d265358-ce61-4703-939b-ccc0041a1135",
              "parentUUID": "f87d9790-e8ae-4e86-a1f0-50d8157277bb",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"isAllNumbers\"",
              "fullTitle": "isAllNumbers \"after each\" hook in \"isAllNumbers\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "5e3c3676-032c-4933-aa27-fe260d35ac7b",
              "parentUUID": "f87d9790-e8ae-4e86-a1f0-50d8157277bb",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return TRUE if all items are numbers",
              "fullTitle": "isAllNumbers should return TRUE if all items are numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrayOfNumbers = [1, 2, 3, 4];\nexpect(validator.isAllNumbers(arrayOfNumbers)).to.be.equal(true);",
              "err": {},
              "uuid": "f4417766-7d71-4343-8d57-39a152666873",
              "parentUUID": "f87d9790-e8ae-4e86-a1f0-50d8157277bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return FALSE if NOT all items are numbers",
              "fullTitle": "isAllNumbers should return FALSE if NOT all items are numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrayOfMixed = [1, \"2\", 3, 4];\nexpect(validator.isAllNumbers(arrayOfMixed)).to.be.equal(false);",
              "err": {},
              "uuid": "842f6e32-31e0-4c19-8e1f-5546ee102abc",
              "parentUUID": "f87d9790-e8ae-4e86-a1f0-50d8157277bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an ERROR if input is NOT an array",
              "fullTitle": "isAllNumbers should throw an ERROR if input is NOT an array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isAllNumbers(\"not an array\");\n}).to.throw(\"[not an array] is not an array\");",
              "err": {},
              "uuid": "1eae68cc-6a05-48a9-b311-27e1f37fe672",
              "parentUUID": "f87d9790-e8ae-4e86-a1f0-50d8157277bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f4417766-7d71-4343-8d57-39a152666873",
            "842f6e32-31e0-4c19-8e1f-5546ee102abc",
            "1eae68cc-6a05-48a9-b311-27e1f37fe672"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5c34dbf9-4260-424d-8080-2a462c972a18",
          "title": "isInteger",
          "fullFile": "J:\\EPAM_PROJECTS\\TESTING\\proj_unit-testing-task-01\\test\\numbers-validator\\isInteger.spec.mjs",
          "file": "\\test\\numbers-validator\\isInteger.spec.mjs",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isInteger\"",
              "fullTitle": "isInteger \"before each\" hook in \"isInteger\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "137602a8-ba30-4461-8b8e-2bc964822f9d",
              "parentUUID": "5c34dbf9-4260-424d-8080-2a462c972a18",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"isInteger\"",
              "fullTitle": "isInteger \"after each\" hook in \"isInteger\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "2a8edae5-24ad-44e9-89f9-de747b760fa5",
              "parentUUID": "5c34dbf9-4260-424d-8080-2a462c972a18",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return TRUE if the number is an integer",
              "fullTitle": "isInteger should return TRUE if the number is an integer",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.isInteger(4)).to.be.equal(true);",
              "err": {},
              "uuid": "bc0348db-c2f4-4d8a-bc3d-b2e5cdd43a7d",
              "parentUUID": "5c34dbf9-4260-424d-8080-2a462c972a18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return FALSE if the number is NOT an integer",
              "fullTitle": "isInteger should return FALSE if the number is NOT an integer",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.isInteger(4.5)).to.be.equal(false);",
              "err": {},
              "uuid": "37126fc0-866b-4682-998b-da90bc7921a1",
              "parentUUID": "5c34dbf9-4260-424d-8080-2a462c972a18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an ERROR if the number is NOT a number",
              "fullTitle": "isInteger should throw an ERROR if the number is NOT a number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isInteger(\"not a number\");\n}).to.throw('[not a number] is not a number');",
              "err": {},
              "uuid": "53241cb4-87c2-4809-8d76-031e5a797fd4",
              "parentUUID": "5c34dbf9-4260-424d-8080-2a462c972a18",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc0348db-c2f4-4d8a-bc3d-b2e5cdd43a7d",
            "37126fc0-866b-4682-998b-da90bc7921a1",
            "53241cb4-87c2-4809-8d76-031e5a797fd4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "85c8fe4e-6ffb-4e08-ba2c-15796fa841ca",
          "title": "isNumberEven",
          "fullFile": "J:\\EPAM_PROJECTS\\TESTING\\proj_unit-testing-task-01\\test\\numbers-validator\\isNumberEven.spec.mjs",
          "file": "\\test\\numbers-validator\\isNumberEven.spec.mjs",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isNumberEven\"",
              "fullTitle": "isNumberEven \"before each\" hook in \"isNumberEven\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "9181b6c2-025d-41cb-83c9-a02ea2437c6f",
              "parentUUID": "85c8fe4e-6ffb-4e08-ba2c-15796fa841ca",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"isNumberEven\"",
              "fullTitle": "isNumberEven \"after each\" hook in \"isNumberEven\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "65ae9a7f-d177-4f14-8789-50c5214dac3b",
              "parentUUID": "85c8fe4e-6ffb-4e08-ba2c-15796fa841ca",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return TRUE if number is EVEN",
              "fullTitle": "isNumberEven should return TRUE if number is EVEN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// expect(validator.isNumberEven(4)).to.be.equal(true);\nconst validationResults = validator.isNumberEven(4);\nexpect(validationResults).to.be.equal(true);",
              "err": {},
              "uuid": "5ab149e0-e491-4076-a35e-8664e26cc2ff",
              "parentUUID": "85c8fe4e-6ffb-4e08-ba2c-15796fa841ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return FALSE if number is ODD",
              "fullTitle": "isNumberEven should return FALSE if number is ODD",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// expect(validator.isNumberEven(5)).to.be.equal(false);\nconst validationResults = validator.isNumberEven(5);\nexpect(validationResults).to.be.equal(false);",
              "err": {},
              "uuid": "f025efdd-89ec-4ff4-916e-7b61c0604b44",
              "parentUUID": "85c8fe4e-6ffb-4e08-ba2c-15796fa841ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an ERROR when provided a STRING",
              "fullTitle": "isNumberEven should throw an ERROR when provided a STRING",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven(\"4\");\n}).to.throw('[4] is not of type \"Number\" it is of type \"string\"');",
              "err": {},
              "uuid": "d0694fc1-ea2b-4df3-bbd1-be89f1bbd3c6",
              "parentUUID": "85c8fe4e-6ffb-4e08-ba2c-15796fa841ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ab149e0-e491-4076-a35e-8664e26cc2ff",
            "f025efdd-89ec-4ff4-916e-7b61c0604b44",
            "d0694fc1-ea2b-4df3-bbd1-be89f1bbd3c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}